# frozen_string_literal: true
require 'fileutils'
require 'json'

class DocsGeneratorTool
  FEATURES_PATH = File.expand_path('../Features', __dir__)
  DOCS_PATH = File.expand_path('../Docs', __dir__)

  def self.generate_all
    FileUtils.mkdir_p(DOCS_PATH)
    Dir.glob(File.join(FEATURES_PATH, '**/*/')).each do |dir|
      next if dir == "#{FEATURES_PATH}/"
      relative = dir.sub(FEATURES_PATH + '/', '')
      doc_dir = File.join(DOCS_PATH, relative)
      FileUtils.mkdir_p(doc_dir)
      %w[Overview Design Integration].each do |f|
        md = File.join(doc_dir, "#{f}.md")
        next if File.exist?(md)
        File.write(md, "# #{f} for #{File.basename(dir)}\n\nAuto-generated by DocsGeneratorTool.")
      end
      idx = File.join(doc_dir, 'index.html')
      File.write(idx, "<html><body><h1>#{File.basename(dir)} Docs</h1></body></html>") unless File.exist?(idx)
    end
    puts "DocsGeneratorTool: generated all docs."
  end
end

# optional manual run:
# DocsGeneratorTool.generate_all if __FILE__ == $0
